\documentclass{article}
\usepackage[utf8]{inputenc}
\usepackage[spanish]{babel}
\usepackage[margin=1in]{geometry}
\setlength{\parindent}{0cm}
\usepackage{graphicx}
\usepackage{amsmath}
\usepackage{amssymb}
\usepackage{float}
\usepackage{lastpage}
\usepackage{listings}
\usepackage{multicol}
\usepackage[colorlinks = true, linkcolor = black, urlcolor=black]{hyperref}
\usepackage[table]{xcolor}
\usepackage{svg}
\usepackage{comment}
\usepackage[colorlinks = true, linkcolor = black, urlcolor=black]{hyperref}

\title{Proyecto: Control de Velocidad de un Motor DC}
\author{Ezequiel Matsuo}
\date{Junio 2025}

\begin{document}

\maketitle
\tableofcontents

\section{Introducción}

\section{Modelo matemático de un motor DC}

Se identifican dos ecuaciones diferenciales que modelan al motor de corriente continua: la parte eléctrica y la parte mecánica.
\begin{equation}
    \tau_m  - \tau_L = J_m \dfrac{d \omega_m}{dt} + B\omega_m
    \label{eq_mecanica1}
\end{equation}
\begin{equation}
    \tau_m = K_T i_a
    \label{eq_mecanica2}
\end{equation}
\begin{equation}
    V_a = i_a R_a + L_a \dfrac{d i_a}{dt} + E_a
    \label{eq_electrica1}
\end{equation}
\begin{equation}
    E_a = K_E \omega_m
    \label{eq_electrica2}
\end{equation}

Las ecuaciones \ref{eq_mecanica1} y \ref{eq_mecanica2} corresponden a la parte mecánica y las ecuaciones \ref{eq_electrica1} y \ref{eq_electrica2} a la parte eléctrica. 
\\Para nuestro modelo matemático vamos a considerar las siguientes aproximaciones para simplificar las ecuaciones: asumir que la fricción viscosa B es despreciable. Además para el modelado y la identificación del sistema, se asume una condición sin carga; es decir, $T_L = 0$.
\\Aplicando Laplace a las ecuaciones anteriores se obtiene la siguiente transferencia entre la velocidad mecánica $\omega_m$ y la tensión de armadura $V_a$:
\begin{equation}
    \dfrac{\omega_m}{V_a} = \dfrac{K_T/(L_aJ)}{s^2 + sR_a/L_a + (K_TK_E)/(L_aJ)}
    \label{eq:trans_vel_tension}
\end{equation}


\section{Componentes utilizados}

Tanto la medición de la velocidad del motor como el control se realizó a partir de un microcontrolador ESP8266 utilizando el entorno de Arduino. Se utilizó el encoder de efecto hall AS5600 para medir las revoluciones del motor. Se utilizó la siguiente librería del sensor: \url{https://github.com/RobTillaart/AS5600}.
\\Para controlar el motor se utilizó el driver puente H L298N, donde es posible cambiar el sentido de giro a través de las entradas 'IN0' e 'IN1'. Para controlar la tensión que excita al motor se utiliza una modulación PWM a través de la entrada 'ENA' del modulo L298N.
\\Para obtener la velocidad angular del motor a partir del encoder se debe calcular la diferencia de las posiciones angular. Experimentalmente se vió que la máxima velocidad alcanzada para la máxima alimentación (19.5V) es de 3600rpm o 60 revoluciones por segundo. Como es necesario calcular la velocidad a partir de las posiciones angulares del encoder, se requiere que el sensor mida cada $1/60 = 16.7ms$ ya que sino estaría perdiendose rotaciones. Experimentalmente se fijó el tiempo con interrupciones por Timer cada $2ms$ ya que se obtuvieron mejores resultados en la medición.
\\Luego se debió calcular la frecuencia con la cual debe actuar la acción de control. A partir de la transferencia dada por \ref{eq:trans_vel_tension} se obtienen dos polos del sistema: el polo eléctrico de valor $p_1 = -543.05$ y el polo mecánico $p_2 = -25.85$. Como el polo eléctrico es mucho más rápido que el mecánic, podemos despreciarlo y por tanto, aproximar al sistema de 2do orden como uno de 1er orden cuyo polo dominante esta dado por $p_2=-25.85$, cuya constante de tiempo es $1/25.85 \approx 40ms$
\\De esta forma si consideramos una frecuencia de muestreo 10 veces más rápido que la frecuencia de corte del sistema se tiene una cota dada por $t_s \leq 4ms$. Por tanto, se difinió que la acción de control va a actuar cada $4ms$.

%\subsection{Convertidor Puente H - Modo de Conducción Continua}

\section{Identificación del sistema}


\subsection{Filtrado del sensor}

Los datos de velocidad se obtienen al calcular la diferencia entre posiciones angulares absolutas obtenidas del sensor AS5600, produciendo mediciones no precisas. Para ello se utilizaron diferentes filtros: dos promedios móviles de 2 y 4 muestras y un filtro IIR Butterworth de 1er orden, como se observan en la figura \ref{fig:comparativa_filtros}.

\begin{figure}[H]
    \centering
    \includesvg[width=1\linewidth]{Figuras/comparativa_filtros.svg}
    \caption{Comparativa entre los diferentes filtros}
    \label{fig:comparativa_filtros}
\end{figure}

Se puede apreciar que el que mejor filtrado produce es el filtro Butterworth; sin embargo este filtro tiene la desventaja que genera un desfasaje no lineal de la fase e introduce un mayor retardo con respecto a los otros filtros. Como la distorsión en la respuesta no es tan evidente, se terminó utilizando el filtro Butterworth.
\\Se eligió un filtro de 1er orden para no complejizar la transferencia del sistema. Por tanto, teniendo en cuenta que la frecuencia de muestreo es $Ts=4ms$ y definiendo una frecuencia de corte del filtro pasabajos $fc=10Hz$, se obtuvo la siguiente transferencia del filtro Butterworth en el dominio discreto:

\begin{equation}
    \dfrac{Y(z)}{X(z)} = \dfrac{0.1122 + 0.1122z^{-1}}{1-0.7757z^{-1}}
\end{equation}

\subsection{Identificación de la Planta: Puente H + Motor}

La identificación de los parámetros se hizo a lazo abierto utilizando la transferencia de 2do orden de la ecuacion \ref{eq:trans_vel_tension}.

\begin{figure}[H]
    \centering
    \includesvg[width=1\linewidth]{Figuras/rta_lazo_abierto_15V_imagen2.svg}
    \caption{Velocidad mecánica vs tiempo}
    \label{fig:vel_lazo_abierto}
\end{figure}

Para generar el escalón de tensión se configuró la funcion \textit{analogwrite()} de Arduino con un valor de $200$. Como el valor de tensión $Vcc$ de la fuente es de $19.5V$, la señal PWM se moduló con un ancho de pulso igual a $200/255$ de manera que la tensión promedio que le llega al motor es de $15.65V$. Por tanto, la tensión generada no es exactamente un escalón de tensión como tal sino un 'escalón' de tensión modulada con PWM.
\\
Obteniendo la respuesta experimental de un escalón de tensión y utilizando la herramienta System Identification de Matlab se resolvieron las siguientes ecuaciones:

\begin{equation*}
    K_T /(L_aJ) = 2.767\cdot 10^5
\end{equation*}
\begin{equation*}
    R_a/L_a = 568.9
\end{equation*}
\begin{equation*}
    (K_TK_E)/(L_aJ) = 1.404 \cdot 10^4 
\end{equation*}

El valor de la resistencia $R_a$, medida con un multimetro, es de $29\Omega$.
\\En un principio se asumió que no existían pérdidas mecánicas y por tanto, $K_E = K_T$; sin embargo esta consideración dejó de ser válida al no concordar los parámetros obtenidos con las respuestas a lazo cerrado del sistema. Por tanto, en base a los parámetros obtenidos de las ecuaciones anteriores se realizó una corrección. Los parámetros identificados se muestran en el cuadro \ref{table:parametros}.
\\
\begin {table} \centering 
\begin{tabular}{ |p{3cm}|p{3cm}| }
\hline
 $R_a$ & $29\quad\Omega$\\
 \hline
 $L_a$   & $50.9\quad mH$    \\
\hline
 $K_E$ &  $0.045\quad (V\cdot s)/rad$\\
 \hline
 $K_T$ & $0.09\quad (N\cdot m)/A$\\
 \hline
 $J_m$  & $6.88\cdot10^{-6}\quad kg\cdot m^2$\\
 \hline
\end{tabular}
\caption{Parámetros Identificados}
\label{table:parametros}
\end{table}

\subsection{No linealidades}


\section{Diseño del controlador PI}

Se diseñó un controlador PI cuya expresión es la siguiente:
\begin{equation}
    C(s) = K_p (\dfrac{Tis+1}{T_i s})
\end{equation}

Donde $K_p$ es la ganancia proporcional y $T_i$ la constante de la integral.
\\Para el diseño del controlador se aproximó la transferencia de 2do orden de la ecuación \ref{eq:trans_vel_tension} por un sistema de 1er orden con polo dominante en $p_1 = $.
\\Por tanto, con el controlador PI y el sistema de 1er orden a lazo cerrado la transferencia entre la referencia de velocidad y la velocidad mecánica queda expresada como:
\begin{equation}
    \dfrac{\omega_m}{\omega_{ref}} = \dfrac{KK_p(Tis+1)}{s^2\tau_m + s(1 + KK_pT_i) + KK_pT_i}
\end{equation}

A su vez, despreciamos el cero de la transferencia anterior y lo aproximaremos a un sistema de segundo orden utilizando el factor de amortiguamiento $\xi$ y la frecuencia natural no amortiguada $\omega_o$ para definir el tiempo de establecimiento y el sobrepico máximo alcanzado en el transitorio.
\\El tiempo de establecimiento para un sistema de 2do orden con subamortiguamiento ($ 0 < \xi < 1$) esta dado por:
\begin{equation*}
    t_s = \dfrac{4}{\xi \omega_o}
\end{equation*}
En tanto la máxima sobreelongación $M_p$ como:
\begin{equation*}
    M_p = exp(-\pi\xi/ \sqrt{1-\xi ^2}))
\end{equation*}



\subsection{Lugar de Raíces}

\subsection{Resultados experimentales}

 

\begin{figure}[H]
    \centering
    \includesvg[width=1\linewidth]{Figuras/rta_escalon_velocidad_lazocerrado.svg}
    \caption{Velocidad mecánica a un escalón de referencia. Sistema a lazo cerrado con control PI: $K_p$ = 0.0833 y $T_i$ = 0.03846}
    \label{fig:velocidad}
\end{figure}

\begin{figure}[H]
    \centering
    \includesvg[width=1\linewidth]{Figuras/rta_escalon_tension_lazocerrado.svg}
    \caption{Acción de control $u$}
    \label{fig:accion_control}
\end{figure}

\section{Conclusiones}


\end{document}
